#ifndef MAINCMDPROC_H
#define MAINCMDPROC_H

#include "mod_socket.h"

/**********************************************************************************************
 * 函数名	:init_com_channel()
 * 功能	:初始化与主进程通讯的命令通道
 * 输入	:l无
 * 返回值	:0表示成功 负值表示失败
 **********************************************************************************************/
int init_com_channel(void);
/**********************************************************************************************
 * 函数名	:main_send_cmd()
 * 功能	:vsmain向指定的模块用模块间socket通讯命令发送信息
 * 输入	:send:指向要发送的命令(mod_socket_cmd_type类型)的缓冲区的指针(已经填充好相关信息)
 *		 target:目标模块的id，若为0则表示发送给所有模块
 *		 len:缓冲区中有效数据的长度
 * 返回值	:0表示成功，负值表示失败
 **********************************************************************************************/
int main_send_cmd(mod_socket_cmd_type * send, long int target, int len);
/**********************************************************************************************
 * 函数名	:bypass2gate()
 * 功能	:将从其他模块收到的需要发送给网关的命令转发出去
 * 输入	:cmd:接收到的其他模块发来的命令
 * 返回值	:0表示成功 负值表示失败
 * 注		:利用接收缓冲区作为发送缓冲区,所以调用完本函数后cmd中的内容会更改
 **********************************************************************************************/
int bypass2gate(mod_socket_cmd_type *cmd);
/**********************************************************************************************
 * 函数名	:creat_cmdproc_thread()
 * 功能	:创建接收并处理其他模块发来的命令的线程
 * 输入	:attr:线程属性指针
 * 返回值	:0表示成功 负值表示失败
 **********************************************************************************************/
int creat_cmdproc_thread(pthread_attr_t *attr);
int send_query_state_cmd(long int target);

int process_gate_cmd_ack(mod_socket_cmd_type *cmd);
#endif

