/*
 * cliboftestsda.h
 *
 *  Created on: 2014-2-8
 *      Author: yangkun
 */

#ifndef CLIBOFTESTSDA_H_
#define CLIBOFTESTSDA_H_

#define TYPE_VIDEO 1
#define TYPE_AUDIO 2
#define TYPE_VIDEO_I 3
#define TYPE_VIDEO_P 4

#define OUT

#define SDA_READ_NUM	6		//开启几个读线程
#define ERR_NO_DATA	-1				//没有数据
#define ERR_NOT_IN  -9//BLOCK_ERR_NOT_IN  //在硬盘中找不到输入的时间

#define ERR_WRONG_CHANNEL -10000	//输入的通道号不正常
#define ERR_TYPE		-10001

#include "gtsf.h"
#ifdef __cplusplus
extern "C" {
#endif
/********************************************************************************
 * //每个线程，也就是每个用户应该有个内部的错误号；比如读硬盘时，出错了，线程停住了，但是外面其它线程是不知道的。
 * //注意此版本的通道号（channel）是没有作用的！！！
 * //可能bug:
 * 		１、查询时间段可能会出现误，可以日志为参考
 * 		２、读线程异常退出
 * 		３、
 *
 * 		如果硬盘读值出错，应该给调用获取接口一个返回值
 ********************************************************************************/




/********************************************************************************
 * 功能：初始化读硬盘库
 *
 * 返回：暂时无，只返回０
 ********************************************************************************/
int sda_init();


/********************************************************************************
 * 功能：查询时间段接口
 * 参数：channel： 通道号；
 * 		time_start： 开始时间
 * 		time_end：结束时间
 * 		time_sec_buf：函数内部把组好的时间段复制到此段；
 * 		time_sec_buf_size:此缓冲区大小
 *
 * 注意：只能查一天以内的段！！！！
 ********************************************************************************/
int query_record_section(int channel,int time_start,int time_end, /*IN OUT*/char * time_sec_buf,int time_sec_buf_size);


/********************************************************************************
 * 功能：获取空闲用户
 *
 * 返回：返回用户（０与SDA_READ_NUM之间）；小于０，没有空闲的通道；
 ********************************************************************************/
int sda_get_idle_user();


/********************************************************************************
 * 功能：开始播放
 * 参数：userno,空闲用户；channel播放通道;starttime开始播放时间; playtime播放时间
 * 返回：ERR_NOT_IN输入的时间不在硬盘中，或在硬盘中找不到输入的时间
 *
 * 注备：channel是[0,SDA_READ_NUM)区间内任一值，建议最初由sda_get_idle_channel()获得；
 ********************************************************************************/
int sda_startplay(int usrno,int channel,int starttime, int playtime);


/********************************************************************************
 * 功能：停止播放
 *
 *
 * 注备：如果只是想暂停，可以不取数据
 ********************************************************************************/
int sda_stopplay(int usrno);


/********************************************************************************
 * 功能：获取音视频数据
 * 参数：channel播放通道;
 * 		media_type: TYPE_VIDEO 1; TYPE_AUDIO 2
 * 		buf:获取数据的缓冲区
 * 		buf_size:缓冲区的大小
 * 		media_size：获取数据的大小
 * 		video_type:如果是视频时，是Ｉ，Ｐ帧
 *
 * 注备：１、如果要获取的媒体数据比缓冲区大，刚只复制缓冲区所能存放的最大数据，剩下多余数据丢失。
 * 		２、要尽可能的同时取音视频数据；不能只取音视频数据，或只取视频数据；
 *
 *
 * 帧率分辨率，编码格式
 ********************************************************************************/
int sda_get_media(int usrno,int channel,int media_type,/*IN OUT*/char *buf,unsigned int buf_size, \
		/*OUT*/unsigned int *media_size, /*OUT*/stream_format_t *sft);


/********************************************************************************
 * 功能：关闭sda
 *
 ********************************************************************************/
void sda_free();


#ifdef __cplusplus
};
#endif
#endif /* CLIBOFTESTSDA_H_ */
