#ifndef HDDBUF_H								//避免重复包含报错
#define HDDBUF_H	

#include <stdio.h>
#include <stdlib.h>								//malloc等函数
#include <stddef.h>								//NULL 等常量
#include <string.h>								//strlen等函数

#define MAX_FILE 		10						//最多文件数量
#define FILE_PATH		"/hqdata/update/"			//保存路径
#define FILE_NAME		"buffer_file_no."			//名称



/*********************************************************************
*函数名: write_frame()
*功能  : 向硬盘缓冲区写入一帧数据
*输入  : buff	  数据指针
*     		 : buff_len 数据长度
*返回值: 正常返回成功写入缓冲区的长度，错误返回负值
**********************************************************************/
int write_frame(void *buff,int buff_len);



/*********************************************************************
*函数名: read_frame()
*功能  : 从硬盘缓冲区读取一帧数据
*输入  : buff	输出数据指针，用来存放读取到的数据
*     		 : buff_len);读取的指定长度，如果一帧数据小于这
*		   个长度，则返回一帧数据的长度
*返回值: 正常返回读取到的数据长度，错误返回负值
**********************************************************************/
int read_frame(void *buff,int buff_len);




/*********************************************************************
*函数名: move_read_buff_place()
*功能  : 移动读取缓冲区的指针,以移动一帧为一个单位,只改变读取指针不改变
*     		 : 写入指针的位置
*输入  : offset	   offset>0 向将来的方向移动指针
*      : 	   offset<0 向过去的方向移动指针
*返回值: 正常返回0，错误返回负值
**********************************************************************/
int move_read_buff_place(int offset);



/*********************************************************************
*函数名: get_buff_remain()
*功能  : 获取当前还有多少帧没有读取
*输入  : 无
*返回值: 正常返回还有多少帧没有读取，错误返回负值
**********************************************************************/
int get_buff_remain(void);



/*********************************************************************
*函数名: init_read_buff()
*功能  : 初始化硬盘缓冲区
*输入  : frame_cnt  缓冲区可以保存的帧数.超过总帧数后，新的一帧覆盖最老的
*   		    一帧
*返回值: 正常返回0，错误返回负值
**********************************************************************/
int init_read_buff(int frame_cnt);

/*********************************************************************
*函数名: init_write_buff()
*功能  : 初始化硬盘缓冲区
*输入  : frame_cnt  缓冲区可以保存的帧数.超过总帧数后，新的一帧覆盖最老的
*   		    一帧
*返回值: 正常返回0，错误返回负值
**********************************************************************/
int init_write_buff(int frame_cnt);


/*********************************************************************
*函数名: release_read_buff()
*功能  : 释放硬盘缓冲区
*输入  : 关闭打开的读写文件描述符
*返回值: 正常返回0，错误返回负值
**********************************************************************/
int release_read_buff(void);



/*********************************************************************
*函数名: release_write_buff()
*功能  : 释放硬盘缓冲区
		 : 关闭打开的读写文件描述符
*输入 : 无
*返回值: 正常返回0，错误返回负值
**********************************************************************/
int release_write_buff(void);



/*********************************************************************
*函数名: sync_out()
*功能  : 进程间数据同步接口，读出读指针当前位置序号
*输入  : 无
*返回值: 读指针序号
**********************************************************************/
int sync_out(void);


/*********************************************************************
*函数名: sync_in()
*功能  : 进程间数据同步接口，同步读指针
*输入  : sync_out 返回的读指针序号
*返回值: 正常返回0，错误返回负值
**********************************************************************/
int sync_in(int no);



#endif

