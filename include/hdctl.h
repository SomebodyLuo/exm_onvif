/* 对硬盘进行控制，状态读取等的函数  -wsy Nov@2007*/

#ifndef _HDCTL_H
#define _HDCTL_H

#ifndef IN
#define IN
#define OUT
#define IO
#endif

#define TEST_PASSED			0	//测试通过
#define TEST_FAILED			1	//测试失败
#define TEST_UNAVILABLE		2	//测试未进行或读不到状态
#define	TEST_RUNNING		3	//测试进行中

static __inline__ char *get_testresult_str(int result)
{
	switch(result)
	{
		case(0):return "通过";
		case(1):return "失败";
		case(2):return "未进行";	
		case(3):return "进行中";
		default:return "状态非法";
	}

}


//以下为厂商，可增加
#define MAXTOR	1
#define SEAGATE	2
#define	WD		3
#define	HITACHI	4



#define GT_SMART_SHORTTEST	0
#define GT_SMART_LONGTEST	1

/****************************************************************
	函数名称	get_hd_temperature()
	功能		获取指定硬盘的当前温度（摄氏）
	输入		diskno,为0,1,2..的硬盘编号
	返回值		正值表示当前温度，0或负值表示错误
****************************************************************/
int get_hd_temperature(int diskno);


/****************************************************************
	函数名称	get_hd_max_temperature()
	功能		获取指定硬盘的最高温度（摄氏）
	输入		diskno,为0,1,2..的硬盘编号
	返回值		正值表示最高温度，负值表示错误码
****************************************************************/
int get_hd_max_temperature(int diskno);

/****************************************************************
	函数名称	get_hd_shorttest_result()
	功能		获取指定硬盘的上一次短测试结果
	输入		diskno,为0,1,2..的硬盘编号
	输出		percent_done:指向完成百分数的指针，其值取值0-100，在测试进行中的情况下才有意义
	返回值		0表示成功通过，1表示失败,2表示没有读到结果,3表示进行中
				负值表示失败的错误码
****************************************************************/
int get_hd_shorttest_result(int diskno, int *percent_done);


/****************************************************************
	函数名称	get_hd_shorttest_result()
	功能		获取指定硬盘的上一次长测试结果
	输入		diskno,为0,1,2..的硬盘编号
	输出		percent_done:指向完成百分数的指针，其值取值0-100，在测试进行中的情况下才有意义
	返回值		0表示成功通过，1表示失败,2表示没有读到结果,3表示进行中
				负值表示失败的错误码
****************************************************************/
int get_hd_longtest_result(int diskno, int *percent_done);




/****************************************************************
	函数名称	run_hd_smarttest()
	功能		对指定硬盘进行指定性质的测试
	输入		diskno,为0,1,2..的硬盘编号
				testtype,为0表示短测试，为1表示长测试,为2表示短测试通过后再长测试
	返回值		0表示成功，其他值表示失败
****************************************************************/
int run_hd_smarttest(int diskno, int testtype);




/****************************************************************
	函数名称	get_hd_info()
	功能		获取指定硬盘的型号,序列号,固件版本号等基本信息
	输入		diskno,为0,1,2..的硬盘编号
	输出		model,硬盘型号字符串
				serialno,硬盘序列号字符串
				firmware,固件版本字符串
	返回值		0表示成功，负值表示错误码
	说明		model字符串的缓冲区至少需要40字节
				serialno的缓冲区至少需要20字节
				firmware的缓冲区至少需要8字节
****************************************************************/
int get_hd_info(IN int diskno, OUT char *model, OUT char* serialno, OUT char *firmware);



/***************************************************************
	函数名称	get_hd_volume_inGiga()
	功能		获取指定硬盘的容量，单位为G,按销售标准,即250G,320G等
	输入		diskno,为0,1,2..的硬盘编号
	返回值		正值表示容量,0或负值表示失败
****************************************************************/
int get_hd_volume_inGiga(int diskno);



/****************************************************************	
	函数名称	get_hd_runninghour()
	功能		获取指定硬盘的上电总小时数
	输入		diskno,为0,1,2..的硬盘编号
	返回值		非负值表示小时数,负值表示错误码
****************************************************************/
int get_hd_runninghour(int diskno);



/****************************************************************	
	函数名称	get_hd_relocate_sector()
	功能		获取指定硬盘的重分配扇区数
	输入		diskno,为0,1,2..的硬盘编号
	返回值		非负值表示扇区数,负值表示错误码
****************************************************************/
int get_hd_relocate_sector(int diskno);




/****************************************************************	
	函数名称	get_hd_pending_sector()
	功能		获取指定硬盘的挂起扇区数
	输入		diskno,为0,1,2..的硬盘编号
	返回值		非负值表示扇区数,负值表示错误码
****************************************************************/
int get_hd_pending_sector(int diskno);


/****************************************************************	
	函数名称	get_hd_errorlog_num()
	功能		获取指定硬盘的错误日志条数
	输入		diskno,为0,1,2..的硬盘编号
	返回值		非负值表示错误日志条数,负值表示错误
****************************************************************/
int get_hd_errorlog_num(int diskno);

#endif

